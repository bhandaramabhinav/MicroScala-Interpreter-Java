Source Program
--------------


object Test5 {

  var my_list : List [Int] = Nil;

  def cons_my_list (r : Int) : List [Int] =
  {
    if (r <= 10) {
      my_list = r :: my_list;
      my_list = cons_my_list (r + 1);
    }
    return my_list;
  }

  def main (args : Array [String])
  {
    var r : Int = 0;
    r = 1;
    my_list = Nil;
    my_list = cons_my_list (r);
    println (my_list . head);
  }

}

The output of the Interpreter is: 
10


PARSE SUCCESSFUL



Identifier Table for Global Environment
---------------------------------------

Id           Category
--           --------
cons_my_list procedure
main         procedure
my_list      list([10, 9, 8, 7, 6, 5, 4, 3, 2, 1])

Syntax Tree for cons_my_list
----------------------------
(: (if (<= (id r) (intValue 10)) (: (= (id my_list) (:: (id r) (id my_list))) (= (id my_list) (apply cons_my_list [(+ (id r) (intValue 1))])))) (return (id my_list)))

Identifier Table for cons_my_list
---------------------------------

Id Category
-- --------

Syntax Tree for main
--------------------
(: (: (: (= (id r) (intValue 1)) (= (id my_list) NIL)) (= (id my_list) (apply cons_my_list [(id r)]))) (println (head (id my_list))))

Identifier Table for main
-------------------------

Id Category
-- --------
r  int(1)
